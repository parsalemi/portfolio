$totalNumberOfProjects: 4;
$animationTime: 10s;
$cardWidth: 300px;

@function animationDelay($itemNumber){
  @return calc($animationTime/$totalNumberOfProjects * ($totalNumberOfProjects - $itemNumber) * -1);
}

.lgWrapper {
  margin-inline: auto;
  overflow-x: hidden;
  mask-image: linear-gradient(to right,
  rgba(0 , 0, 0, 0),
  rgba(0, 0, 0, 1) 20%,
  rgba(0, 0, 0, 1) 80%,
  rgba(0, 0, 0, 0),
  );

  &:hover .lgProjectCard{
    animation-play-state: paused;
  }
}
.lgProjectCard{
  // background-color: red;
  left: max(calc($cardWidth * $totalNumberOfProjects), 100%);
  animation: toLeftLg $animationTime infinite linear;

  @for $i from 1 through $totalNumberOfProjects{
    &:nth-child(#{$i}){
      animation-delay: animationDelay($i);
    }
  }
}
.mdWrapper{
  flex-wrap: wrap;
  gap: 20px;
  margin-inline: auto;
  overflow-x: hidden;
  mask-image: linear-gradient(to right,
  rgba(0 , 0, 0, 0),
  rgba(0, 0, 0, 1) 20%,
  rgba(0, 0, 0, 1) 80%,
  rgba(0, 0, 0, 0),
  );

  &:hover .mdProjectCard{
    animation-play-state: paused;
  }
}
.mdProjectCard{
  animation: toLeftMd $animationTime infinite linear;
  left: max(calc($cardWidth * 4), 100%);
  @for $i from 1 through 4 {
    &:nth-child(#{$i}){
      animation-delay: animationDelay($i);
    }
  }
}
@keyframes toLeftLg{
  to {
    left: -30%;
  }
}
@keyframes toLeftMd{
  to{
    left: -35%
  }
}